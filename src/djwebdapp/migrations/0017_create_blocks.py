# Generated by Django 3.2.18 on 2023-04-08 08:32

from django.db import migrations, models
from django.db.models import Min
import django.db.models.deletion
import importlib


def migrate_level(apps, schema_editor):
    # First, create all the blocks we need for each blockchain
    Blockchain = apps.get_model('djwebdapp', 'Blockchain')
    for bc in Blockchain.objects.filter(is_active=True):
        parts = bc.provider_class.split('.')
        mod = importlib.import_module('.'.join(parts[:-1]))
        provider_cls = getattr(mod, parts[-1])
        provider = provider_cls(blockchain=bc)

        min_level = bc.transaction_set.aggregate(Min('level'))['level__min']
        max_level = provider.head
        hashes = provider.block_hashes(min_level, max_level)
        for level, hash in hashes.items():
            bc.block_set.create(level=level, hash=hash)

    Transaction = apps.get_model('djwebdapp', 'Transaction')
    transactions = Transaction.objects.exclude(level=None)
    for tx in transactions:
        tx.block = tx.blockchain.block_set.get(level=tx.level)
        tx.save()


class Migration(migrations.Migration):

    dependencies = [
        ('djwebdapp', '0016_block_model'),
    ]

    operations = [
        migrations.RunPython(migrate_level),
    ]
